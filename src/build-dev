#!/bin/bash

PURPLE='\033[0;35m'
GREEN='\033[0;32m'
NC='\033[0m'

echo "Creating virtual environment"
if [ ! -d venv ]; then
    python3 -m venv venv
fi
echo "Activating virtual environment..."
. venv/bin/activate 

echo "Checking packages..."
installed_packages=`pip3 freeze`
expexted_packages=`cat requirements.txt`
if [ "$installed_packages" != "$expexted_packages" ]; then  
    echo "Installing packages..."
    pip3 install -r requirements.txt
fi

if [ ! -f config ]; then
    read -p "PROXI_HOST: " PROXI_HOST
    read -p "TELEGRAMBOT_TOKEN: " TELEBOT_TOKEN 
    printf "#!/bin/bash\nPROXI_HOST=$PROXI_HOST\nTELEBOT_TOKEN=$TELEBOT_TOKEN" > config
    printf "Data was added to ${YELLOW}config${NC}"
fi



if [ -f .gitignore ]; then
    GITIGNORE=`cat .gitignore`
    case `grep -Fx config .gitignore >/dev/null; echo $?` in
    0)
        # code if found
        printf "\n${YELLOW}Config${NC} has been added to ${YELLOW}.gitignore${NC} file"
        ;;
    1)
        echo -e "$GITIGNORE\nconfig" > .gitignore
        printf "\n${YELLOW}Config${NC} has been added to ${YELLOW}.gitignore${NC} file"
        ;;
    *)
        printf "${RED}Adding config to .gitignore file was failed${NC}"
        ;;
    esac
else
    echo -e "config" > .gitignore
    printf "\n${YELLOW}Config${NC} has been added to ${YELLOW}.gitignore${NC} file"
fi  

printf "\n\nDevelopment build is ${GREEN}ready to use :)${NC}\n\n"
printf "${PURPLE}atomy run-dev${NC}\n\n"